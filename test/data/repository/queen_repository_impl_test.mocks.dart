// Mocks generated by Mockito 5.3.2 from annotations
// in drags_race_app/test/data/repository/queen_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:drags_race_app/modules/queens/data/remote/cache/drags_race_cache_data_source.dart'
    as _i6;
import 'package:drags_race_app/modules/queens/data/remote/data_source/drags_race_remote_data_source.dart'
    as _i3;
import 'package:drags_race_app/modules/queens/domain/model/details/queen_details_model.dart'
    as _i2;
import 'package:drags_race_app/modules/queens/domain/model/queen/queen_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQueenDetailsModel_0 extends _i1.SmartFake
    implements _i2.QueenDetailsModel {
  _FakeQueenDetailsModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DragsRaceRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDragsRaceRemoteDataSource extends _i1.Mock
    implements _i3.DragsRaceRemoteDataSource {
  MockDragsRaceRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.QueenModel>> getAllQueens() => (super.noSuchMethod(
        Invocation.method(
          #getAllQueens,
          [],
        ),
        returnValue: _i4.Future<List<_i5.QueenModel>>.value(<_i5.QueenModel>[]),
      ) as _i4.Future<List<_i5.QueenModel>>);
  @override
  _i4.Future<_i2.QueenDetailsModel> getQueenByID(int? queenID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQueenByID,
          [queenID],
        ),
        returnValue:
            _i4.Future<_i2.QueenDetailsModel>.value(_FakeQueenDetailsModel_0(
          this,
          Invocation.method(
            #getQueenByID,
            [queenID],
          ),
        )),
      ) as _i4.Future<_i2.QueenDetailsModel>);
  @override
  _i4.Future<_i2.QueenDetailsModel> getQueenByName(String? queenName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQueenByName,
          [queenName],
        ),
        returnValue:
            _i4.Future<_i2.QueenDetailsModel>.value(_FakeQueenDetailsModel_0(
          this,
          Invocation.method(
            #getQueenByName,
            [queenName],
          ),
        )),
      ) as _i4.Future<_i2.QueenDetailsModel>);
}

/// A class which mocks [DragsRaceCacheDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDragsRaceCacheDataSource extends _i1.Mock
    implements _i6.DragsRaceCacheDataSource {
  MockDragsRaceCacheDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveAllQueens(List<_i5.QueenModel>? queenList) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAllQueens,
          [queenList],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i5.QueenModel>> getAllQueens() => (super.noSuchMethod(
        Invocation.method(
          #getAllQueens,
          [],
        ),
        returnValue: _i4.Future<List<_i5.QueenModel>>.value(<_i5.QueenModel>[]),
      ) as _i4.Future<List<_i5.QueenModel>>);
  @override
  _i4.Future<void> saveQueenDetails(_i2.QueenDetailsModel? queenDetailsModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveQueenDetails,
          [queenDetailsModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.QueenDetailsModel> getQueenDetails(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQueenDetails,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.QueenDetailsModel>.value(_FakeQueenDetailsModel_0(
          this,
          Invocation.method(
            #getQueenDetails,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.QueenDetailsModel>);
}
